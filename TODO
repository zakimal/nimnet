- Generator

```
# Atlas
- graph_atlas(i)
- graph_atlas_g()

# Classic
- [x] balanced_tree(r, h[, create_using])
- [x] barbell_graph(m1, m2[, create_using])
- [x] binomial_tree(n[, create_using])
- [x] complete_graph(n[, create_using])
- complete_multipartite_graph(*subset_sizes)
- [x] circular_ladder_graph(n[, create_using])
- [x] circulant_graph(n, offsets[, create_using])
- [x] cycle_graph(n[, create_using])
- [x] dorogovtsev_goltsev_mendes_graph(n[, …])
- [x] empty_graph([n, create_using, default])
- [x] full_rary_tree(r, n[, create_using])
- [x] ladder_graph(n[, create_using])
- [x] lollipop_graph(m, n[, create_using])
- [x] null_graph([create_using])
- [x] path_graph(n[, create_using])
- [x] star_graph(n[, create_using])
- [x] trivial_graph([create_using])
- turan_graph(n, r)
- [x] wheel_graph(n[, create_using])

# Expanders
- margulis_gabber_galil_graph(n[, create_using])
- chordal_cycle_graph(p[, create_using])
- paley_graph(p[, create_using])

# Lattice
- grid_2d_graph(m, n[, periodic, create_using])
- grid_graph(dim[, periodic])
- hexagonal_lattice_graph(m, n[, periodic, …])
- hypercube_graph(n)
- triangular_lattice_graph(m, n[, periodic, …])

# Small
- make_small_graph(graph_description[, …])
- LCF_graph(n, shift_list, repeats[, create_using])
- [x] bull_graph([create_using])
- [x] chvatal_graph([create_using])
- [x] cubical_graph([create_using])
- desargues_graph([create_using])
- [x] diamond_graph([create_using])
- dodecahedral_graph([create_using])
- [x] frucht_graph([create_using])
- heawood_graph([create_using])
- [x] hoffman_singleton_graph()
- [x] house_graph([create_using])
- house_x_graph([create_using])
- icosahedral_graph([create_using])
- krackhardt_kite_graph([create_using])
- moebius_kantor_graph([create_using])
- octahedral_graph([create_using])
- pappus_graph()
- petersen_graph([create_using])
- sedgewick_maze_graph([create_using])
- tetrahedral_graph([create_using])
- truncated_cube_graph([create_using])
- truncated_tetrahedron_graph([create_using])
- tutte_graph([create_using])

# Random Graphs
- fast_gnp_random_graph(n, p[, seed, directed])
- gnp_random_graph(n, p[, seed, directed])
- dense_gnm_random_graph(n, m[, seed])
- gnm_random_graph(n, m[, seed, directed])
- erdos_renyi_graph(n, p[, seed, directed])
- binomial_graph(n, p[, seed, directed])
- newman_watts_strogatz_graph(n, k, p[, seed])
- watts_strogatz_graph(n, k, p[, seed])
- connected_watts_strogatz_graph(n, k, p[, …])
- random_regular_graph(d, n[, seed])
- barabasi_albert_graph(n, m[, seed, …])
- dual_barabasi_albert_graph(n, m1, m2, p[, …])
- extended_barabasi_albert_graph(n, m, p, q[, …])
- powerlaw_cluster_graph(n, m, p[, seed])
- random_kernel_graph(n, kernel_integral[, …])
- random_lobster(n, p1, p2[, seed])
- random_shell_graph(constructor[, seed])
- random_powerlaw_tree(n[, gamma, seed, tries])
- random_powerlaw_tree_sequence(n[, gamma, …])
- random_kernel_graph(n, kernel_integral[, …])

# Duplication Divergence
- duplication_divergence_graph(n, p[, seed])
- partial_duplication_graph(N, n, p, q[, seed])

# Degree Sequence
- configuration_model(deg_sequence[, …])
- directed_configuration_model(…[, …])
- expected_degree_graph(w[, seed, selfloops])
- havel_hakimi_graph(deg_sequence[, create_using])
- directed_havel_hakimi_graph(in_deg_sequence, …)
- degree_sequence_tree(deg_sequence[, …])
- random_degree_sequence_graph(sequence[, …])

# Random Clustered
- random_clustered_graph(joint_degree_sequence)

# Directed
- gn_graph(n[, kernel, create_using, seed])
- gnr_graph(n, p[, create_using, seed])
- gnc_graph(n[, create_using, seed])
- random_k_out_graph(n, k, alpha[, …])
- scale_free_graph(n[, alpha, beta, gamma, …])

# Geometric
- random_geometric_graph(n, radius[, dim, …])
- soft_random_geometric_graph(n, radius[, …])
- geographical_threshold_graph(n, theta[, …])
- waxman_graph(n[, beta, alpha, L, domain, …])
- navigable_small_world_graph(n[, p, q, r, …])
- thresholded_random_geometric_graph(n, …[, …])

# Line Graph
- line_graph(G[, create_using])
- inverse_line_graph(G)

# Ego Graph
- ego_graph(G, n[, radius, center, …])

# Stochastic
- stochastic_graph(G[, copy, weight])

# AS graph
- random_internet_as_graph(n[, seed])

# Intersection
- uniform_random_intersection_graph(n, m, p[, …])
- k_random_intersection_graph(n, m, k[, seed])
- general_random_intersection_graph(n, m, p[, …])

# Social Networks
- [x] karate_club_graph()
- [x] davis_southern_women_graph()
- [x] florentine_families_graph()
- [x] les_miserables_graph()

# Community
- caveman_graph(l, k)
- connected_caveman_graph(l, k)
- gaussian_random_partition_graph(n, s, v, …)
- LFR_benchmark_graph(n, tau1, tau2, mu[, …])
- planted_partition_graph(l, k, p_in, p_out[, …])
- random_partition_graph(sizes, p_in, p_out[, …])
- relaxed_caveman_graph(l, k, p[, seed])
- ring_of_cliques(num_cliques, clique_size)
- stochastic_block_model(sizes, p[, nodelist, …])
- windmill_graph(n, k)

# Spectral
- spectral_graph_forge(G, alpha[, …])

# Trees
- random_tree(n[, seed, create_using])
- prefix_tree(paths)

# Non Isomorphic Trees
- nonisomorphic_trees(order[, create])
- number_of_nonisomorphic_trees(order)

# Triads
- triad_graph(triad_name)

# Joint Degree Sequence
- is_valid_joint_degree(joint_degrees)
- joint_degree_graph(joint_degrees[, seed])
- is_valid_directed_joint_degree(in_degrees, …)
- directed_joint_degree_graph(in_degrees, …)

# Mycielski
- mycielskian(G[, iterations])
- mycielski_graph(n)

# Harary Graph
- hnm_harary_graph(n, m[, create_using])
- hkn_harary_graph(k, n[, create_using])

# Cographs
- random_cograph(n[, seed])

# Interval Graph
- interval_graph(intervals)

# Sudoku
- sudoku_graph(size)
```

- Algorithms

```
Approximations and Heuristics
- Connectivity
- K-components
- Clique
- Clustering
- Distance Measures
- Dominating Set
- Matching
- Ramsey
- Steiner Tree
- Traveling Salesman
- Treewidth
- Vertex Cover
- Max Cut

Assortativity
- Assortativity
- Average neighbor degree
- Average degree connectivity
- Mixing
- Pairs

Asteroidal
- networkx.algorithms.asteroidal.is_at_free
- networkx.algorithms.asteroidal.find_asteroidal_triple

Bipartite
- Basic functions
- Edgelist
- Matching
- Matrix
- Projections
- Spectral
- Clustering
- Redundancy
- Centrality
- Generators
- Covering

Boundary
- networkx.algorithms.boundary.edge_boundary
- networkx.algorithms.boundary.node_boundary

Bridges
- networkx.algorithms.bridges.bridges
- networkx.algorithms.bridges.has_bridges
- networkx.algorithms.bridges.local_bridges

Centrality
- [x] Degree
- Eigenvector
- Closeness
- Current Flow Closeness
- (Shortest Path) Betweenness
- Current Flow Betweenness
- Communicability Betweenness
- Group Centrality
- Load
- Subgraph
- Harmonic Centrality
- Dispersion
- Reaching
- Percolation
- Second Order Centrality
- Trophic
- VoteRank

Chains
- networkx.algorithms.chains.chain_decomposition

Chordal
- networkx.algorithms.chordal.is_chordal
- networkx.algorithms.chordal.chordal_graph_cliques
- networkx.algorithms.chordal.chordal_graph_treewidth
- networkx.algorithms.chordal.complete_to_chordal_graph
- networkx.algorithms.chordal.find_induced_nodes

Clique
- networkx.algorithms.clique.enumerate_all_cliques
- networkx.algorithms.clique.find_cliques
- networkx.algorithms.clique.make_max_clique_graph
- networkx.algorithms.clique.make_clique_bipartite
- networkx.algorithms.clique.graph_clique_number
- networkx.algorithms.clique.graph_number_of_cliques
- networkx.algorithms.clique.node_clique_number
- networkx.algorithms.clique.number_of_cliques
- networkx.algorithms.clique.cliques_containing_node
- networkx.algorithms.clique.max_weight_clique

Clustering
- networkx.algorithms.cluster.triangles
- networkx.algorithms.cluster.transitivity
- networkx.algorithms.cluster.clustering
- networkx.algorithms.cluster.average_clustering
- networkx.algorithms.cluster.square_clustering
- networkx.algorithms.cluster.generalized_degree

Coloring
- networkx.algorithms.coloring.greedy_color
- networkx.algorithms.coloring.equitable_color
- networkx.algorithms.coloring.strategy_connected_sequential
- networkx.algorithms.coloring.strategy_connected_sequential_dfs
- networkx.algorithms.coloring.strategy_connected_sequential_bfs
- networkx.algorithms.coloring.strategy_independent_set
- networkx.algorithms.coloring.strategy_largest_first
- networkx.algorithms.coloring.strategy_random_sequential
- networkx.algorithms.coloring.strategy_saturation_largest_first
- networkx.algorithms.coloring.strategy_smallest_last

Communicability
- networkx.algorithms.communicability_alg.communicability
- networkx.algorithms.communicability_alg.communicability_exp

Communities
- Bipartitions
- K-Clique
- Modularity-based communities
- Tree partitioning
- Label propagation
- Fluid Communities
- Measuring partitions
- Partitions via centrality measures
- Validating partitions

Components
- Connectivity
- Strong connectivity
- Weak connectivity
- Attracting components
- Biconnected components
- Semiconnectedness

Connectivity
- Edge-augmentation
- K-edge-components
- K-node-components
- K-node-cutsets
- Flow-based disjoint paths
- Flow-based Connectivity
- Flow-based Minimum Cuts
- Stoer-Wagner minimum cut
- Utils for flow-based connectivity

Cores
- networkx.algorithms.core.core_number
- networkx.algorithms.core.k_core
- networkx.algorithms.core.k_shell
- networkx.algorithms.core.k_crust
- networkx.algorithms.core.k_corona
- networkx.algorithms.core.k_truss
- networkx.algorithms.core.onion_layers

Covering
- networkx.algorithms.covering.min_edge_cover
- networkx.algorithms.covering.is_edge_cover

Cycles
- networkx.algorithms.cycles.cycle_basis
- networkx.algorithms.cycles.simple_cycles
- networkx.algorithms.cycles.find_cycle
- networkx.algorithms.cycles.minimum_cycle_basis

Cuts
- networkx.algorithms.cuts.boundary_expansion
- networkx.algorithms.cuts.conductance
- networkx.algorithms.cuts.cut_size
- networkx.algorithms.cuts.edge_expansion
- networkx.algorithms.cuts.mixing_expansion
- networkx.algorithms.cuts.node_expansion
- networkx.algorithms.cuts.normalized_cut_size
- networkx.algorithms.cuts.volume

D-Separation
- Examples
- References
- networkx.algorithms.d_separation.d_separated

Directed Acyclic Graphs
- networkx.algorithms.dag.ancestors
- networkx.algorithms.dag.descendants
- networkx.algorithms.dag.topological_sort
- networkx.algorithms.dag.topological_generations
- networkx.algorithms.dag.all_topological_sorts
- networkx.algorithms.dag.lexicographical_topological_sort
- networkx.algorithms.dag.is_directed_acyclic_graph
- networkx.algorithms.dag.is_aperiodic
- networkx.algorithms.dag.transitive_closure
- networkx.algorithms.dag.transitive_closure_dag
- networkx.algorithms.dag.transitive_reduction
- networkx.algorithms.dag.antichains
- networkx.algorithms.dag.dag_longest_path
- networkx.algorithms.dag.dag_longest_path_length
- networkx.algorithms.dag.dag_to_branching

Distance Measures
- networkx.algorithms.distance_measures.barycenter
- networkx.algorithms.distance_measures.center
- networkx.algorithms.distance_measures.diameter
- networkx.algorithms.distance_measures.eccentricity
- networkx.algorithms.distance_measures.extrema_bounding
- networkx.algorithms.distance_measures.periphery
- networkx.algorithms.distance_measures.radius
- networkx.algorithms.distance_measures.resistance_distance

Distance-Regular Graphs
- networkx.algorithms.distance_regular.is_distance_regular
- networkx.algorithms.distance_regular.is_strongly_regular
- networkx.algorithms.distance_regular.intersection_array
- networkx.algorithms.distance_regular.global_parameters

Dominance
- networkx.algorithms.dominance.immediate_dominators
- networkx.algorithms.dominance.dominance_frontiers

Dominating Sets
- networkx.algorithms.dominating.dominating_set
- networkx.algorithms.dominating.is_dominating_set

Efficiency
- networkx.algorithms.efficiency_measures.efficiency
- networkx.algorithms.efficiency_measures.local_efficiency
- networkx.algorithms.efficiency_measures.global_efficiency

Eulerian
- networkx.algorithms.euler.is_eulerian
- networkx.algorithms.euler.eulerian_circuit
- networkx.algorithms.euler.eulerize
- networkx.algorithms.euler.is_semieulerian
- networkx.algorithms.euler.has_eulerian_path
- networkx.algorithms.euler.eulerian_path

Flows
- Maximum Flow
- Edmonds-Karp
- Shortest Augmenting Path
- Preflow-Push
- Dinitz
- Boykov-Kolmogorov
- Gomory-Hu Tree
- Utils
- Network Simplex
- Capacity Scaling Minimum Cost Flow

Graph Hashing
- networkx.algorithms.graph_hashing.weisfeiler_lehman_graph_hash

Graphical degree sequence
- networkx.algorithms.graphical.is_graphical
- networkx.algorithms.graphical.is_digraphical
- networkx.algorithms.graphical.is_multigraphical
- networkx.algorithms.graphical.is_pseudographical
- networkx.algorithms.graphical.is_valid_degree_sequence_havel_hakimi
- networkx.algorithms.graphical.is_valid_degree_sequence_erdos_gallai

Hierarchy
- networkx.algorithms.hierarchy.flow_hierarchy

Hybrid
- networkx.algorithms.hybrid.kl_connected_subgraph
- networkx.algorithms.hybrid.is_kl_connected

Isolates
- networkx.algorithms.isolate.is_isolate
- networkx.algorithms.isolate.isolates
- networkx.algorithms.isolate.number_of_isolates

Isomorphism
- networkx.algorithms.isomorphism.is_isomorphic
- networkx.algorithms.isomorphism.could_be_isomorphic
- networkx.algorithms.isomorphism.fast_could_be_isomorphic
- networkx.algorithms.isomorphism.faster_could_be_isomorphic
- Tree Isomorphism
- Advanced Interfaces

Link Analysis
- PageRank
- Hits

Link Prediction
- [x] networkx.algorithms.link_prediction.resource_allocation_index
- [x] networkx.algorithms.link_prediction.jaccard_coefficient
- [x] networkx.algorithms.link_prediction.adamic_adar_index
- [x] networkx.algorithms.link_prediction.preferential_attachment
- [x] networkx.algorithms.link_prediction.cn_soundarajan_hopcroft
- [x] networkx.algorithms.link_prediction.ra_index_soundarajan_hopcroft
- [x] networkx.algorithms.link_prediction.within_inter_cluster
- networkx.algorithms.link_prediction.common_neighbor_centrality

Lowest Common Ancestor
- networkx.algorithms.lowest_common_ancestors.all_pairs_lowest_common_ancestor
- networkx.algorithms.lowest_common_ancestors.tree_all_pairs_lowest_common_ancestor
- networkx.algorithms.lowest_common_ancestors.lowest_common_ancestor

Matching
- networkx.algorithms.matching.is_matching
- networkx.algorithms.matching.is_maximal_matching
- networkx.algorithms.matching.is_perfect_matching
- networkx.algorithms.matching.maximal_matching
- networkx.algorithms.matching.max_weight_matching
- networkx.algorithms.matching.min_weight_matching

Minors
- References
- networkx.algorithms.minors.contracted_edge
- networkx.algorithms.minors.contracted_nodes
- networkx.algorithms.minors.identified_nodes
- networkx.algorithms.minors.equivalence_classes
- networkx.algorithms.minors.quotient_graph

Maximal independent set
- networkx.algorithms.mis.maximal_independent_set

non-randomness
- networkx.algorithms.non_randomness.non_randomness

Moral
- networkx.algorithms.moral.moral_graph

Node Classification
- Harmonic Function
- Local and Global Consistency

Operators
- networkx.algorithms.operators.unary.complement
- networkx.algorithms.operators.unary.reverse
- networkx.algorithms.operators.binary.compose
- networkx.algorithms.operators.binary.union
- networkx.algorithms.operators.binary.disjoint_union
- networkx.algorithms.operators.binary.intersection
- networkx.algorithms.operators.binary.difference
- networkx.algorithms.operators.binary.symmetric_difference
- networkx.algorithms.operators.binary.full_join
- networkx.algorithms.operators.all.compose_all
- networkx.algorithms.operators.all.union_all
- networkx.algorithms.operators.all.disjoint_union_all
- networkx.algorithms.operators.all.intersection_all
- networkx.algorithms.operators.product.cartesian_product
- networkx.algorithms.operators.product.lexicographic_product
- networkx.algorithms.operators.product.rooted_product
- networkx.algorithms.operators.product.strong_product
- networkx.algorithms.operators.product.tensor_product
- networkx.algorithms.operators.product.power

Planarity
- networkx.algorithms.planarity.check_planarity

Planar Drawing
- networkx.algorithms.planar_drawing.combinatorial_embedding_to_pos

Reciprocity
- networkx.algorithms.reciprocity.reciprocity
- networkx.algorithms.reciprocity.overall_reciprocity

Regular
- networkx.algorithms.regular.is_regular
- networkx.algorithms.regular.is_k_regular
- networkx.algorithms.regular.k_factor

Rich Club
- networkx.algorithms.richclub.rich_club_coefficient

Shortest Paths
- networkx.algorithms.shortest_paths.generic.shortest_path
- networkx.algorithms.shortest_paths.generic.all_shortest_paths
- networkx.algorithms.shortest_paths.generic.shortest_path_length
- networkx.algorithms.shortest_paths.generic.average_shortest_path_length
- networkx.algorithms.shortest_paths.generic.has_path
- Advanced Interface
- Dense Graphs
- A* Algorithm

Similarity Measures
- networkx.algorithms.similarity.graph_edit_distance
- networkx.algorithms.similarity.optimal_edit_paths
- networkx.algorithms.similarity.optimize_graph_edit_distance
- networkx.algorithms.similarity.optimize_edit_paths
- networkx.algorithms.similarity.simrank_similarity
- networkx.algorithms.similarity.simrank_similarity_numpy
- networkx.algorithms.similarity.panther_similarity
- networkx.algorithms.similarity.generate_random_paths

Simple Paths
- networkx.algorithms.simple_paths.all_simple_paths
- networkx.algorithms.simple_paths.all_simple_edge_paths
- networkx.algorithms.simple_paths.is_simple_path
- networkx.algorithms.simple_paths.shortest_simple_paths

Small-world
- networkx.algorithms.smallworld.random_reference
- networkx.algorithms.smallworld.lattice_reference
- networkx.algorithms.smallworld.sigma
- networkx.algorithms.smallworld.omega

s metric
- networkx.algorithms.smetric.s_metric

Sparsifiers
- networkx.algorithms.sparsifiers.spanner

Structural holes
- networkx.algorithms.structuralholes.constraint
- networkx.algorithms.structuralholes.effective_size
- networkx.algorithms.structuralholes.local_constraint

Summarization
- networkx.algorithms.summarization.dedensify
- networkx.algorithms.summarization.snap_aggregation

Swap
- networkx.algorithms.swap.double_edge_swap
- networkx.algorithms.swap.connected_double_edge_swap

Threshold Graphs
- networkx.algorithms.threshold.find_threshold_graph
- networkx.algorithms.threshold.is_threshold_graph

Tournament
- networkx.algorithms.tournament.hamiltonian_path
- networkx.algorithms.tournament.is_reachable
- networkx.algorithms.tournament.is_strongly_connected
- networkx.algorithms.tournament.is_tournament
- networkx.algorithms.tournament.random_tournament
- networkx.algorithms.tournament.score_sequence

Traversal
- Depth First Search
- Breadth First Search
- Beam search
- Depth First Search on Edges
- Breadth First Search on Edges

Tree
- Recognition
- Branchings and Spanning Arborescences
- Encoding and decoding
- Operations
- Spanning Trees
- Decomposition
- Exceptions

Triads
- networkx.algorithms.triads.triadic_census
- networkx.algorithms.triads.random_triad
- networkx.algorithms.triads.triads_by_type
- networkx.algorithms.triads.triad_type
- networkx.algorithms.triads.all_triads
- networkx.algorithms.triads.all_triplets

Vitality
- networkx.algorithms.vitality.closeness_vitality

Voronoi cells
- networkx.algorithms.voronoi.voronoi_cells

Wiener index
- networkx.algorithms.wiener.wiener_index
```